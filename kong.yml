# kong.yml
# This is a declarative configuration file for Kong.
# It defines the services, routes, and plugins for the API gateway.

_format_version: "3.0"

# Define a service that points to our Next.js application.
services:
  - name: nextjs-app-service
    url: http://app:3000
    routes:
      # Public authentication routes (only login/register allowed without JWT)
      - name: public-auth-routes
        paths:
          - /api/auth/login
          - /api/auth/register
          - /api/auth/logout
        methods:
          - POST
        strip_path: false
      # Public health check (for monitoring)
      - name: public-health-routes
        paths:
          - /api/health
          - /api/debug
        methods:
          - GET
        strip_path: false
      # Static assets (CSS, JS, images) - needed for login page
      - name: public-static-routes
        paths:
          - /_next
          - /favicon.ico
          - /static
        methods:
          - GET
        strip_path: false
      # Login page route (public access to show login form)
      - name: public-login-page
        paths:
          - /login
        methods:
          - GET
        strip_path: false
      
      # Root path redirect to login (public access)
      - name: public-root-redirect
        paths:
          - /
        methods:
          - GET
        strip_path: false
      
      # Routes accessible to all authenticated users (customer, auditor, admin)
      - name: customer-accessible-routes
        paths:
          - /dashboard
          - /agents
          - /learning
          - /evidence
          - /api/auth/me
        methods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
        strip_path: false
      
      # Routes accessible to auditor and admin only
      - name: auditor-admin-routes
        paths:
          - /reports
          - /audit-log
        methods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
        strip_path: false
      
      # Routes accessible to admin only
      - name: admin-only-routes
        paths:
          - /users
          - /settings
        methods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
        strip_path: false
      
      # Catch-all for any other routes - require authentication
      - name: protected-fallback-routes
        paths:
          - /
        methods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
        strip_path: false

# JWT Consumers (users who can authenticate)
consumers:
  - username: audit-app
    custom_id: audit-app-consumer
    jwt_secrets:
      - key: audit-app-key
        secret: your-256-bit-secret-key-here-change-this-in-production
        algorithm: HS256
    acls:
      - group: web-users

  # Anonymous consumer for public routes
  - username: anonymous
    custom_id: anonymous-user
    acls:
      - group: web-users

# Security and rate limiting plugins
plugins:
  # JWT Authentication for customer-accessible routes (all authenticated users)
  - name: jwt
    route: customer-accessible-routes
    config:
      key_claim_name: iss
      secret_is_base64: false
      anonymous: null
      cookie_names:
        - auth_token
      header_names:
        - authorization
        
  # JWT Authentication for auditor-admin routes
  - name: jwt
    route: auditor-admin-routes
    config:
      key_claim_name: iss
      secret_is_base64: false
      anonymous: null
      cookie_names:
        - auth_token
      header_names:
        - authorization
        
  # JWT Authentication for admin-only routes
  - name: jwt
    route: admin-only-routes
    config:
      key_claim_name: iss
      secret_is_base64: false
      anonymous: null
      cookie_names:
        - auth_token
      header_names:
        - authorization
        
  # JWT Authentication for fallback routes
  - name: jwt
    route: protected-fallback-routes
    config:
      key_claim_name: iss
      secret_is_base64: false
      anonymous: null
      cookie_names:
        - auth_token
      header_names:
        - authorization

  # Role-based access control using pre-function plugin for auditor-admin routes
  - name: pre-function
    route: auditor-admin-routes
    config:
      access:
        - |
          local jwt = kong.ctx.shared.jwt_keyset_key
          if jwt then
            local claims = jwt.claims or {}
            local role = claims.role
            if role ~= "admin" and role ~= "auditor" then
              kong.response.exit(403, {message = "Access denied. Insufficient permissions."})
            end
          else
            kong.response.exit(401, {message = "Authentication required."})
          end

  # Role-based access control using pre-function plugin for admin-only routes  
  - name: pre-function
    route: admin-only-routes
    config:
      access:
        - |
          local jwt = kong.ctx.shared.jwt_keyset_key
          if jwt then
            local claims = jwt.claims or {}
            local role = claims.role
            if role ~= "admin" then
              kong.response.exit(403, {message = "Access denied. Admin access required."})
            end
          else
            kong.response.exit(401, {message = "Authentication required."})
          end
      
  # Rate limiting to prevent abuse
  - name: rate-limiting
    service: nextjs-app-service
    config:
      minute: 100
      hour: 1000
      policy: local
      

      
  # Strict CORS - only allow access through Kong gateway
  - name: cors
    service: nextjs-app-service
    config:
      origins:
        - "http://localhost"
        - "http://localhost:80"
        - "http://localhost:8000"
        - "http://96.30.194.117"
        - "http://96.30.194.117:80"
        - "http://96.30.194.117:8000"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - OPTIONS
      headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - Authorization
        - X-Requested-With
      exposed_headers:
        - X-Auth-Token
        - Authorization
      credentials: true
      max_age: 3600
      

          
  # HTTP Log plugin to send logs to Fluent Bit
  - name: http-log
    service: nextjs-app-service
    config:
      http_endpoint: http://fluent-bit:24224/kong
      method: POST
      timeout: 10000
      keepalive: 60000
      
  # File Log plugin for local logging
  - name: file-log
    service: nextjs-app-service
    config:
      path: /tmp/kong_access.log
      
  # Prometheus plugin for metrics
  - name: prometheus
    service: nextjs-app-service
    config:
      per_consumer: true

  # Request Size Limiting for security
  - name: request-size-limiting
    service: nextjs-app-service
    config:
      allowed_payload_size: 10
      size_unit: megabytes

  # Bot Detection plugin to block unwanted bots
  - name: bot-detection
    service: nextjs-app-service
    config:
      allow: []
      deny: 
        - "googlebot"
        - "bingbot"
        - "slurp"
        - "crawler"
        - "spider"

  # Request Transformer to add security headers
  - name: request-transformer
    service: nextjs-app-service
    config:
      add:
        headers:
          - "X-Kong-Gateway: true"
          - "X-Forwarded-By: kong"

  # Response Transformer for additional security headers
  - name: response-transformer
    service: nextjs-app-service
    config:
      add:
        headers:
          - "X-Frame-Options: DENY"
          - "X-Content-Type-Options: nosniff"
          - "X-XSS-Protection: 1; mode=block"
          - "Strict-Transport-Security: max-age=31536000; includeSubDomains"
          - "Referrer-Policy: strict-origin-when-cross-origin"
          - "Permissions-Policy: camera=(), microphone=(), geolocation=()"
          - "X-Kong-Proxy: enabled"

  # ACL (Access Control List) plugin for additional security
  - name: acl
    service: nextjs-app-service
    config:
      allow:
        - "web-users"
      hide_groups_header: true

  # Pre-function plugin to block direct port 3000 access
  - name: pre-function
    service: nextjs-app-service
    config:
      access:
        - |
          -- Block requests that try to access port 3000 directly
          local host = kong.request.get_header("host")
          if host and string.find(host, ":3000") then
            kong.response.exit(403, {message = "Direct access to port 3000 is not allowed. Please use the main application URL."})
          end
          
          -- Ensure request came through Kong by checking for Kong headers
          local kong_request_id = kong.request.get_header("x-kong-request-id")
          local forwarded_host = kong.request.get_header("x-forwarded-host")
          
          -- Allow health checks and requests with proper Kong headers
          local path = kong.request.get_path()
          if not (kong_request_id or forwarded_host) and not string.find(path, "/api/health") then
            kong.response.exit(403, {message = "Access denied. Requests must go through the API gateway."})
          end
